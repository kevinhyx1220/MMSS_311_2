library("derivmkts", lib.loc="~/R/win-library/3.4")
detach("package:derivmkts", unload=TRUE)
library("derivmkts", lib.loc="~/R/win-library/3.4")
91 - 0:5
install.packages("derivmkts")
library("derivmkts", lib.loc="~/R/win-library/3.4")
s=100; k=100; v=0.30; r=0.08; tt=1/365; d=0;
tt
greeks(bscall(s, k, v, r, tt, d))
kseq = 80, 90, 110, 120
kseq = [80, 90, 100, 120]
greeks(bscall(s, (80, 90, 100, 120), v, r, tt, d))
greeks(bscall(s, (80 90 100 120), v, r, tt, d))
greeks(bscall(s, (80; 90; 100; 120;), v, r, tt, d))
greeks(bscall(s, (80; 90; 100; 120;), v, r, tt, d))
a <- seq(from=-1, to=2, by=0.1)
a
f <- function(a) {}
f <- function(a) {
d
}
f <- function(a, x) { mean((40+x)^a/40^a - 1)}
f(1, 1)
a
f(a, 1)
x = greeks(bscall(40, 40, .5, .08, c(.25, 1), 0))
library("derivmkts", lib.loc="~/R/win-library/3.4")
x = greeks(bscall(40, 40, .5, .08, c(.25, 1), 0))
x
x['Price']
x['Price',]
x[c('Price', 'Gamma'), ]
y = greeks(bscall(40, c(38:42), .5, .08, 1, 0))
y
y[c('Price', 'Delta', 'Gamma'), ]
rbinom
S = c(40, 41.47486946, 40.08776738, 41.56587298)
S
TT = c(0.2493150685,	0.2356164384,	0.2219178082,	0.2082191781)
TT
greeks(bscall(S, 40, 0.3, 0.08, TT, 0))
rbinom
help
clear
S = 0
S
x = c(-5, 5)
fun <- function(a){mean(max(0, S+x-K)- max(0, S-K))}
fun <- function(K){mean(max(0, S+x-K)- max(0, S-K))}
fun(35)
fun(40)
fun(45)
fun <- function(K){0.5*max(0, S+x-K)- 0.5*max(0, S-K))}
fun <- function(K){0.5*max(0, S+x-K)- 0.5*max(0, S-K)}
fun(35)
S = 40
fun(35)
plot(K, fun(K))
K <- seq(from=30, to=50, by=0.5)
plot(K, fun(K))
y <- seq(from=30, to=50, by=0.5)
plot(y, fun(y))
data.frame(K, fun(K))
eval(mean(max(0, S+x-K)-max(0, S-K)))
K = 40
eval(mean(max(0, S+x-K)-max(0, S-K)))
K = 37
K = 37
eval(mean(max(0, S+x-K)-max(0, S-K)))
f2 <- function(z){eval(mean(max(0, S+x-K)-max(0, S-K))) }
f2(40)
help eval
K <- seq(from=30, to=50, by=0.5)
data.frame(K, f2(K))
f2(40)
K = 35
f2(35)
K = 40
f2(40)
f2(45)
K = 45
f2(45)
x = c(1, 2, 3)
p = c(0.4, 0.15, 0.45)
Ex = sum(x*p)
?hist
hist(x, density = p)
hist(x)
hist(x, probability = p)
plot(p)
?rbinom
?punif
punif(p, min = 1, max = 3, lower.tail = TRUE ,log.p = FALSE )
dunif(p, min = 1, max = 3, log = FALSE)
dunif(x, min = 1, max = 3, log = FALSE)
D <- DiscreteDistribution (supp = x, prob = p)
?rdiscrete
?rdiscrete
??rdiscrete
ddiscrete
?ddiscrete
rdiscrete(10, x)
?rbinom
?sample
?binom
?rbinom
library.derivmarkets
library("derivmkts", lib.loc="~/R/win-library/3.4")
S = 100 ; r = 0.06; div = 0.02; stdev = 0.30; lambda = 0.10; aj = -0.3; sj = 0.4
k = e^(aj - 1)
k = exp(aj - 1)
z <- rnorm(1e04)
w <- rnorm(1e04)
tt = 0.75
library(derivmkts)
help
clear
cashuicall(100,75,0.3,0.08,1,0.02)
cashcall(100,75,0.3,0.08,1,0)
cashcall(100,75,0.3,0.08,1,0.02)
assetcall(100,75,0.3,0.08,1,0.01)
C = cashcall(100,75,0.3,0.08,1,0.02)
A = assetcall(100,75,0.3,0.08,1,0.01)
P = cashput(100,75,0.3,0.08,1,0.02)
exp(10+100)-100*P
exp(-0.08)*(110)-100*P
S = 100 ; r = 0.08; v=0.3; d=0.02; tt=1
H = 75; C = 10
(C+S)*cashdocall(S,75,v,r,tt,d,H) + assetdiput(S,75,v,r,tt,d,H)
(C+S)*cashdocall(S,75,v,r,tt,d,H) + assetdiput(S,100,v,r,tt,d,H)
(C+S)*cashdocall(S,75,v,r,tt,d,H) + assetdiput(S,100,v,r,tt,d,H) + S*cashdicall(S,100,v,r,tt,d,H)
library(derivmkts)
S = 100
v = 0.3
r = 0.08
d = 0
H = 75
T = 2
assetuicall(S,0,v,r,T,s,H)
assetuicall(S,0,v,r,T,s,H)
assetuicall(s,0,v,r,T,s,H)
S = 100
assetuicall(100,0,v,r,T,s,H)
assetuicall(S,0,v,r,T,d,H)
assetdicall(100,0,0.3,0.08,2,0,75)
assetdocall(S,110,v,r,T,d,H)
x = assetdocall(S,110,v,r,T,d,H)
x
assetdicall(100,0,0.3,0.08,2,0,75)
assetdicall(100,0,0.3,0.08,2,0,75) + x
drdeferred(S,v,r,T,d,H)
cashdiput(S,H,v,r,T,d,H)
cashdiput(S,H,v,r,T,d,H) = a
a = cashdiput(S,H,v,r,T,d,H)
b = drdeferred(S,v,r,T,d,H)
a + b
m = 24
stdev = 0.3
s = 125
r = 0.08
d = 0
tt = 2
v = stdev/m * sqrt((m+1)(2m+1)/stdev)
v = stdev / m * sqrt((m+1)(2m+1)/stdev)
stdev / m * sqrt((m+1)(2m+1)/stdev)
v1 = 0.3
v2 = (v1 / m)
v2 = (v1 / m)*(sqrt((m + 1)*(2m+1)/v1))
v2 = (v1 / m)* (sqrt(((m + 1)*(2m+1))/ v1 ))
a = assetdiput(125, 100, 0.3, 0.08, 2, 0, 60)
b = cashdocall(125, 60, 0.3, 0.08, 2, 0, 60)
(100 - a)/b
(1/120)*20000*exp(-0.004-0.02)
20000*exp(0.01-0.02-0.15*0.15*0.08)
sqrt(0.12^2+0.08^2+2*0.2*0.12*0.08)
v = sqrt(0.12^2+0.08^2+2*0.2*0.12*0.08)
bsput(120*3500, 408000, v, 0.01, 2, 0.03)
Fp = 120*3500*exp(-0.03*2)
F2 = 115*3500*exp((-0.004-0.03-0.2*0.08*0.12-0.01)*2)
bsput(Fp, F2, 0.08, 0, 2, 0)
drdeferred(100, 0.3, 0.08, 2, 0, 75)
cashdocall(100, 110, 0.3, 0.008, 2, 0, 75)
dr(100,0.3,0.08,0,75,FALSE)
dr(100,0.3,0.08,0,75)
dr(100, 0.3,  0.08, 2, 0, 75, FALSE)
geomavgpricecall(125,100,0.3,0.08,2,0,24, FALSE)
0.08*100/30.36554
setwd("~/GitHub/MMSS_311_2")
qog <- read.csv(http://www.qogdata.pol.gu.se/data/qog_std_cs_jan19.csv)
qog <- read.csv("http://www.qogdata.pol.gu.se/data/qog_std_cs_jan19.csv")
print(dim(qog))
